{"version":3,"file":"/js/telas.js","mappings":"mBAAaA,M","sources":["webpack:///./resources/js/telas.js"],"sourcesContent":["let janela = window;\nlet tipoJanela = \"inner\";\nlet larguraJanela = 0;\nlet alturaJanela = 0;\n\nconst Tela = {\n\n    pegaTamanhoJanela: function () {\n        if (!(\"innerWidth\" in window)) {\n            tipoJanela = \"client\";\n            janela = document.documentElement || document.body;\n        }\n\n        larguraJanela = janela[tipoJanela + \"Width\"];\n        alturaJanela = janela[tipoJanela + \"Height\"];\n    },\n\n    /**\n     * Fecha a modal aberta.\n     * Passar a div principal como parametro. Ex.: <div class=\"modal-geral\"></div>\n     * @param dlg\n     */\n    fecharModal: function (dlg) {\n        var b = $(dlg).find(\n            \".modal-dialog > .modal-content > .modal-header > button.btn-close\"\n        );\n        b.click();\n    },\n\n    /**\n     * Metodo para abrir os popups com as janelas de create, edit e etc.\n     *\n     * - endereco que sera carregado\n     * - titulo do popup\n     * - grande, sim ou nao. Tamanho do popup\n     *\n     * @param endereco\n     * @param titulo\n     * @param tamanho (P,M,G)\n     */\n    abrirJanela: function (endereco, titulo, tamanho) {\n        Tela.pegaTamanhoJanela();\n        let sizeClass = \"modal-\" + tamanho;\n        if (larguraJanela < 992) {\n            if (!$(\"#modalBasic > div.modal-dialog\").hasClass(\"modal-xl\")) {\n                $(\"#modalBasic > div.modal-dialog\").addClass(\"modal-xl\");\n            }\n        } else {\n            if ($(\"#modalBasic > div.modal-dialog\").hasClass(\"modal-lg\")) {\n                $(\"#modalBasic > div.modal-dialog\").removeClass(\"modal-lg\");\n            }\n            if ($(\"#modalBasic > div.modal-dialog\").hasClass(\"modal-sm\")) {\n                $(\"#modalBasic > div.modal-dialog\").removeClass(\"modal-sm\");\n            }\n            $(\"#modalBasic > div.modal-dialog\").addClass(sizeClass);\n        }\n\n        $(\"#modalBasic > div.modal-dialog > div.modal-content > div.modal-body\").html(\"\");\n        $(\"#modalBasic > div.modal-dialog > div.modal-content > div.modal-header > h5.modal-title\").html(titulo);\n\n        Ajax.carregarConteudo(\n            endereco,\n            $(\"#modalBasic > div.modal-dialog > div.modal-content > div.modal-body\")\n        );\n        $(\"#modalBasic\").modal(\"show\");\n    },\n\n    // Abrir a janela passando os dados via post\n    abrirJanelaPost: function (url, titulo, dados, tamanho) {\n        Tela.pegaTamanhoJanela();\n        let sizeClass = \"modal-\" + tamanho;\n        if (larguraJanela < 992) {\n            if (!$(\"#modalBasic > div.modal-dialog\").hasClass(\"modal-xl\")) {\n                $(\"#modalBasic > div.modal-dialog\").addClass(\"modal-xl\");\n            }\n        } else {\n            if ($(\"#modalBasic > div.modal-dialog\").hasClass(\"modal-lg\")) {\n                $(\"#modalBasic > div.modal-dialog\").removeClass(\"modal-lg\");\n            }\n            if ($(\"#modalBasic > div.modal-dialog\").hasClass(\"modal-sm\")) {\n                $(\"#modalBasic > div.modal-dialog\").removeClass(\"modal-sm\");\n            }\n            $(\"#modalBasic > div.modal-dialog\").addClass(sizeClass);\n        }\n\n        $(\"#modalBasic > div.modal-dialog > div.modal-content > div.modal-body\").html(\"\");\n        $(\"#modalBasic > div.modal-dialog > div.modal-content > div.modal-header > h5.modal-title\").html(titulo);\n\n        Ajax.carregarConteudoViaPost(url, $(\"#modalBasic > div.modal-dialog > div.modal-content > div.modal-body\"), dados);\n        $(\"#modalBasic\").modal(\"show\");\n    },\n\n\n    /**\n     * Metodo para abrir os popups com as janelas de create, edit e etc.\n     *\n     * - endereco que sera carregado\n     * - titulo do popup\n     * - grande, sim ou nao. Tamanho do popup\n     *\n     * @param endereco\n     * @param titulo\n     * @param tamanho (são os tamanhos do bootstrap)\n     */\n    abrirSubJanela: function (endereco, titulo, tamanho) {\n        Tela.pegaTamanhoJanela();\n        let sizeClass = \"modal-\" + tamanho;\n        var modalDialog = $(\"#modalSub > div.modal-dialog\");\n        if (larguraJanela < 992) {\n            if (!modalDialog.hasClass(\"modal-xl\")) {\n                modalDialog.addClass(\"modal-xl\");\n            }\n        } else {\n                if ($(modalDialog).hasClass(\"modal-lg\")) {\n                    $(modalDialog).removeClass(\"modal-lg\");\n                }\n                if ($(modalDialog).hasClass(\"modal-sm\")) {\n                    $(modalDialog).removeClass(\"modal-sm\");\n                }\n\n            $(modalDialog).addClass(sizeClass);\n        }\n\n        $(\"#modalSub > div.modal-dialog > div.modal-content > div.modal-body\").html(\"\");\n        $(\"#modalSub > div.modal-dialog > div.modal-content > div.modal-header > h5.modal-title\").html(titulo);\n\n        Ajax.carregarConteudo(endereco, $(\"#modalSub > div.modal-dialog > div.modal-content > div.modal-body\"));\n        $(\"#modalSub\").modal('show');\n    },\n\n    /**\n     * Abre o modal para exclusão do registro\n     * @param url\n     */\n    abrirJanelaExcluir: function (url, id, callback) {\n        let btn =\n            '<button class=\"btn btn-danger btn-sm\" onclick=\"Ajax.deletarRegistro()\" type=\"button\"><i class=\"fa fa-save\"></i> Confirmar Exclusão</button>';\n        btn +=\n            ' <button class=\"btn btn-warning btn-sm\" data-bs-dismiss=\"modal\" type=\"button\"><i class=\"fa fa-times\"></i> Fechar</button>';\n        $(\"#modalDelete_urlExcluir\").val(url);\n        $(\"#modalDelete_callback\").val(callback);\n        $(\"#modalDelete_id\").val(id);\n        $(\"#modalDelete_footerDeletar\").html(btn);\n        $(\"#modalDelete\").modal(\"show\");\n    },\n\n\n    /**\n     * Função para alertar o usuário com um balão contendo a mensagem desejada\n     *\n     * @param mensagem\n     * @param tipo          : info, sucesso, alerta ou erro.\n     */\n    aviso: function (mensagem, tipo) {\n        let position = \"topRight\";\n        if (tipo === \"erro\") {\n            iziToast.error({\n                message: mensagem,\n                position: position\n            });\n        } else if (tipo === \"sucesso\") {\n            iziToast.success({\n                message: mensagem,\n                position: position\n            });\n        } else if (tipo === \"alerta\") {\n            iziToast.warning({\n                message: mensagem,\n                position: position\n            });\n        } else {\n            iziToast.show({\n                message: mensagem,\n                position: position\n            });\n        }\n    },\n\n    avisoComErro: function (mensagem) {\n        Tela.aviso(mensagem, \"erro\");\n    },\n\n    avisoComInformacao: function (mensagem) {\n        Tela.aviso(mensagem, \"info\");\n    },\n\n    avisoComAlerta: function (mensagem) {\n        Tela.aviso(mensagem, \"alerta\");\n    },\n\n    avisoComSucesso: function (mensagem) {\n        Tela.aviso(mensagem, \"sucesso\");\n    },\n\n    /**\n     * Selecionar ou desmarcar todos os checkbox passados no parâmetro.\n     * nomeCheckBoxLista =      O nome de todos os checkbox que devem ser selecionados ao clicar em componenteSelecionavel\n     * nomeCheckBoxLista:       Deve ser passado o nome da classe CSS para buscar os componentes.\n     * componenteSelecionavel:  Deve ser passado o ID único do componente.\n     */\n    selecionarTodosOsCheckBoxes: function (\n        nomeCheckBoxLista,\n        componenteSelecionavel\n    ) {\n        var boxes = document.getElementsByClassName(nomeCheckBoxLista);\n        var i = 0;\n        for (i; i < boxes.length; i++) {\n            boxes[i].checked = document.getElementById(\n                componenteSelecionavel\n            ).checked;\n\n            var tr = $(boxes[i])\n                .parent()\n                .parent();\n            if ($(boxes[i]).is(\":checked\")) {\n                $(tr).addClass(\"success\");\n            } else {\n                $(tr).removeClass(\"success\");\n            }\n        }\n    }\n};\n\n\nexport default Tela;\n"],"names":["window"],"sourceRoot":""}