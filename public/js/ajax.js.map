{"version":3,"file":"/js/ajax.js","mappings":"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","sources":["webpack:///./resources/js/ajax.js"],"sourcesContent":["$(document).ajaxSend(function (r, s) {\n    $(\".spinner\").show();\n});\n\n$(document).ajaxStop(function (r, s) {\n    $(\".spinner\").fadeOut(\"fast\");\n});\n\nconst Ajax = {\n    carregarConteudo: function (endereco, componente) {\n        $(\".spinner\").show();\n        $.ajax({\n            url: endereco,\n            encoding: \"UTF-8\",\n            success: function (response) {\n                componente.html(response);\n            },\n            error: function (jqXHR, textStatus, errorThrown) {\n                Ajax.tratarErroAjax(jqXHR.status, jqXHR.responseText);\n                Tela.fecharModal();\n            },\n            complete: function () {\n                $(\".spinner\").hide();\n            }\n        });\n    },\n\n    carregarConteudoViaPost: function (endereco, componente, dados) {\n        $(\".spinner\").show();\n        $.ajax({\n            url: endereco,\n            encoding: \"UTF-8\",\n            method: \"POST\",\n            data: dados,\n            success: function (response) {\n                componente.html(response);\n            },\n            error: function (jqXHR, textStatus, errorThrown) {\n                Ajax.tratarErroAjax(jqXHR.status, jqXHR.responseText);\n                Tela.fecharModal();\n            },\n            complete: function () {\n                $(\".spinner\").hide();\n            }\n        });\n    },\n\n    /**\n     * Este método deverá tratar os erros de ajax que ocorrerem.\n     * Cada código http (400, 404, 500 e etc) deverá realizar um procedimento específico para não apresentar\n     * erros diretamente ao usuário.\n     * @param status\n     * @param dados\n     */\n    tratarErroAjax: function (status, dados) {\n        let msg = dados;\n        if (dados instanceof Object) {\n            msg = dados.responseJSON;\n            if (dados.responseJSON instanceof Object) {\n                msg = dados.responseJSON.message;\n            }\n        }\n\n        if (status === 401) {\n            Tela.avisoComAlerta(\n                \"Sua sessão expirou! Por favor, realize o login novamente!\"\n            );\n        } else if (status == 500) {\n            Tela.avisoComErro(msg);\n        } else if (status == 403) {\n            Tela.avisoComErro(\n                \"Acesso negado. Favor verificar com o suporte.\"\n            );\n        } else if (status == 409) {\n            Tela.avisoComErro(msg);\n        } else if (status == 404) {\n            Tela.avisoComErro(\"Página não encontrada!\");\n        } else if (status == 422) {\n            let errors = dados.responseJSON.errors;\n            let errorsHtml = \"<ul>\";\n            $.each(errors, function (key, value) {\n                errorsHtml += \"<li>\" + value[0] + \"</li>\"; //showing only the first error.\n            });\n            errorsHtml += \"</ul>\";\n            Tela.avisoComErro(errorsHtml);\n        } else {\n            Tela.avisoComErro(\"Erro: \" + status + \" Mensagem: \" + msg);\n        }\n    },\n\n    /**\n     * Função que busca registro no servidor.\n     * Normalmente usado pelo filtro nos indexes.\n     * - Faz a busca e atualiza o conteudo dentro do componente 'nomeObjeto'\n     *\n     * - beforeSend: limpa o 'nomeObjeto' para receber os novos dados.\n     *\n     * - success: exibe os dados em 'nomeObjeto'\n     *\n     * - error: trata os erros de ajax\n     * @param divLista\n     * @param divLoad\n     * @param endereco\n     * @param metodo\n     * @param dados\n     * @param callback\n     */\n    buscarRegistros: function (\n        divLista,\n        endereco,\n        dados,\n        metodo,\n        callback\n    ) {\n        $.ajax({\n            url: endereco,\n            type: metodo,\n            data: dados,\n            success: function (data, textStatus, jqXHR) {\n                $(divLista).html(data);\n                if (typeof callback == \"function\") {\n                    callback.call();\n                }\n            },\n            error: function (jqXHR, textStatus, errorThrown) {\n                Ajax.tratarErroAjax(jqXHR.status, jqXHR);\n            }\n        });\n    },\n\n    /**\n     * Salvar o registro.\n     * @param form\n     * @param callback\n     * @param showResultInScreen\n     */\n    salvarRegistro: function (form, callback, showResultInScreen = false) {\n        let formData = $(form).serialize();\n        let formUrl = $(form).attr(\"action\");\n        let footerModal = $(form).find(\"#footerModal\");\n\n        $.ajax({\n            url: formUrl,\n            type: \"POST\",\n            data: formData,\n            beforeSend: function () {\n                $(footerModal)\n                    .find(\"button[type=submit]\")\n                    .attr(\"disabled\", \"true\");\n            },\n            success: function (data, textStatus, jqXHR) {\n                $(\"#formSearch\").submit();\n                if (\n                    !$(form)\n                        .find(\"input[name$='continue']\")\n                        .is(\":checked\") &&\n                    !showResultInScreen\n                ) {\n                    let buttonClose = $(form.closest('.modal-content')).find('.btn-close');\n                    buttonClose.click();\n                }\n                $(form)[0].reset();\n                if (showResultInScreen) {\n                    $(\"#divForm_\" + componente).html(data);\n                }\n                Tela.avisoComSucesso(data);\n                if (typeof callback === \"function\") {\n                    callback.call();\n                }\n            },\n            error: function (jqXHR, textStatus, errorThrown) {\n                Ajax.tratarErroAjax(jqXHR.status, jqXHR);\n            },\n            complete: function () {\n                $(footerModal)\n                    .find(\"button[type=submit]\")\n                    .removeAttr(\"disabled\");\n            }\n        });\n    },\n\n    /**\n     * Método usado para atualizar registro diretamente de um click de botão ou\n     * função javascript. Quando não será aberto um formulário de confirmação\n     * @param formUrl\n     * @param dadosForm\n     * @param callback\n     */\n    salvarRegistroDireto: function (formUrl, dadosForm, method, callback) {\n        let footerModal = $(form).find(\"#footerModal\");\n        $.ajax({\n            url: formUrl,\n            type: method,\n            data: dadosForm,\n            beforeSend: function () {\n                $(footerModal)\n                    .find(\"button[type=submit]\")\n                    .attr(\"disabled\", \"true\");\n            },\n            success: function (data, textStatus, jqXHR) {\n                Tela.avisoComSucesso(data);\n                if (typeof callback === \"function\") {\n                    callback.call();\n                }\n            },\n            error: function (jqXHR, textStatus, errorThrown) {\n                Ajax.tratarErroAjax(jqXHR.status, jqXHR);\n            },\n            complete: function () {\n                $(footerModal)\n                    .find(\"button[type=submit]\")\n                    .removeAttr(\"disabled\");\n            }\n        });\n    },\n\n    /**\n     * este metodo é para enviar dados de formulário que possuírem arquivos (File)\n     * o parametro dados deve ser do tipo formData\n     * exemplo de uso em arquivo/anexarForm.gsp\n     * acrescentado os parametros (contentType e processData)\n     * para não validar os dados vindos do formulário.\n     * isso impede o bloqueio por parte do javascript\n     */\n    salvarRegistroComArquivo: function (formulario, callback, mostrarTela) {\n        if (mostrarTela === undefined) {\n            mostrarTela = false;\n        }\n        let fd = new FormData(formulario[0]);\n        let formUrl = $(formulario).attr(\"action\");\n        let componente = $(formulario).attr(\"component\");\n        let footerModal = $(formulario).find(\"#footerModal\");\n\n        $.ajax({\n            url: formUrl,\n            type: \"POST\",\n            data: fd,\n            contentType: false,\n            processData: false,\n            beforeSend: function () {\n                $(footerModal)\n                    .find(\"button[type=submit]\")\n                    .attr(\"disabled\", \"true\");\n            },\n            success: function (data, textStatus, jqXHR) {\n                $(\"#formSearch\").submit();\n                if (\n                    !$(\"input[name=continuar]\").is(\":checked\") &&\n                    !mostrarTela\n                ) {\n                    let buttonClose = $(formulario.closest('.modal-content')).find('.btn-close');\n                    buttonClose.click();\n                }\n                if (!mostrarTela) {\n                    $(formulario)[0].reset();\n                } else {\n                    $(\"#divForm_\" + componente).html(data);\n                }\n\n                Tela.avisoComSucesso(\"Salvo com sucesso!\");\n                if (typeof callback === \"function\") {\n                    callback.call();\n                }\n            },\n            error: function (jqXHR, textStatus, errorThrown) {\n                Ajax.tratarErroAjax(jqXHR.status, jqXHR);\n            },\n            complete: function () {\n                $(footerModal)\n                    .find(\"button[type=submit]\")\n                    .removeAttr(\"disabled\");\n            }\n        });\n    },\n\n    deletarRegistro: function () {\n        let formUrl = $(\"#modalDelete_urlExcluir\").val();\n        let callback = $(\"#modalDelete_callback\").val();\n        let id = $(\"#modalDelete_id\").val();\n        // let footerModal = $(form).find(\"#footerModal\");\n        $.ajax({\n            url: formUrl,\n            type: \"DELETE\",\n            beforeSend: function () {\n                // $(footerModal)\n                //     .find(\"button[type=submit]\")\n                //     .attr(\"disabled\", \"true\");\n                console.log('ok')\n            },\n            success: function (data, textStatus, jqXHR) {\n                $(\"#row_\" + id).remove();\n                $(\"#modalDelete\").modal(\"hide\");\n                Tela.avisoComSucesso(\"Excluído com sucesso!\");\n                if (typeof eval(callback) == \"function\") {\n                    callback.call();\n                }\n            },\n            error: function (jqXHR, textStatus, errorThrown) {\n                Ajax.tratarErroAjax(jqXHR.status, jqXHR.responseJSON);\n            },\n            complete: function () {\n                // $(footerModal)\n                //     .find(\"button[type=submit]\")\n                //     .removeAttr(\"disabled\");\n                console.log('ok')\n            }\n        });\n    },\n\n    deletarRegistroDireto: function (formUrl, dadosForm, method, callback) {\n        let footerModal = $(form).find(\"#footerModal\");\n        $.ajax({\n            url: formUrl,\n            type: method,\n            data: dadosForm,\n            beforeSend: function () {\n                $(footerModal)\n                    .find(\"button[type=submit]\")\n                    .attr(\"disabled\", \"true\");\n            },\n            success: function (data, textStatus, jqXHR) {\n                $(\"#\" + data).remove();\n                if (typeof callback === \"function\") {\n                    callback.call();\n                }\n            },\n            error: function (jqXHR, textStatus, errorThrown) {\n                Ajax.tratarErroAjax(jqXHR.status, jqXHR);\n            },\n            complete: function () {\n                $(footerModal)\n                    .find(\"button[type=submit]\")\n                    .removeAttr(\"disabled\");\n            }\n        });\n    }\n};\n\nexport default Ajax;\n"],"names":["$","document","ajaxSend","r","s","show","ajaxStop","fadeOut","Ajax","carregarConteudo","endereco","componente","ajax","url","encoding","success","response","html","error","jqXHR","textStatus","errorThrown","tratarErroAjax","status","responseText","Tela","fecharModal","complete","hide","carregarConteudoViaPost","dados","method","data","msg","Object","responseJSON","message","avisoComAlerta","avisoComErro","errors","errorsHtml","each","key","value","buscarRegistros","divLista","metodo","callback","type","call","salvarRegistro","form","showResultInScreen","formData","serialize","formUrl","attr","footerModal","find","beforeSend","submit","is","closest","click","reset","avisoComSucesso","removeAttr","salvarRegistroDireto","dadosForm","salvarRegistroComArquivo","formulario","mostrarTela","undefined","fd","FormData","contentType","processData","deletarRegistro","val","id","console","log","remove","modal","eval","deletarRegistroDireto"],"sourceRoot":""}